<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAIQBAACEAQAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAMAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAQAAAAMAAAAEAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAIAAAADAAAAAAAAAAAAAAACAAAABAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAgAAAAQAAAABAAAAAAAAAAAAAAABAAAABAAAAAMAAAABAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAQAAAAQAAAADAAAAAAAAAAAAAACqAAAAOAAAAAAAAAABAAAAAAAAAAEAAAADAAAABAAA
        AAQAAAAEAAAAAwAAAAEAAAAAAAAAAAAAAAEAAABgAAAAZgAAAAYAAAAAAAAAAAAAAAAAAAADAAAABAAA
        AAQAAAAEAAAABAAAAAIAAAAAAAAAAQAAAAAAAAAtAAAApQAAAP4AAAD/AAAA1wAAAHEAAAAfAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACUAAACBAAAA6AAAAP8AAAD/AAAA8AAAAJIAAAAxAAAAAgAA
        AAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAA8AAABXAAAAxgAAAP8AAAD+AAAA/wAAAGUAAACJAAAA7wAA
        AP8AAADiAAAAuAAAAJkAAACOAAAAmQAAALkAAADlAAAA/wAAAOoAAABtAAAAuQAAALQAAABbAAAA3QAA
        AP8AAADrAAAAvgAAAJcAAACFAAAAigAAAKQAAADQAAAA+gAAAPsAAACgAAAAcQAAAP8AAAD/AAAAQQAA
        AAAAAAAGAAAANAAAAHUAAACnAAAAwgAAAMsAAADDAAAApwAAAHQAAAAvAAAABQAAAAAAAACuAAAArgAA
        AAAAAAADAAAAIwAAAGkAAACiAAAAxAAAANIAAADPAAAAugAAAI0AAABLAAAADwAAAAAAAABBAAAA/wAA
        AP8AAABDAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAAAAAAAA
        AK8AAACvAAAAAAAAAAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAAAA
        AEMAAAD/AAAA/wAAAEEAAAAAAAAAAwAAAAIAAAAEAAAABAAAAAMAAAACAAAAAwAAAAQAAAAEAAAAAgAA
        AAQAAAAAAAAArgAAAK4AAAAAAAAABAAAAAIAAAAEAAAABAAAAAMAAAACAAAAAgAAAAMAAAAEAAAAAwAA
        AAQAAAAAAAAAQQAAAP8AAAD/AAAAQQAAAAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAABAAAAAAAAACuAAAArgAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAwAAAAAAAABBAAAA/wAAAP8AAABBAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAK4AAACuAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAADAAAAAAAAAEEAAAD/AAAA/wAAAEEAAAAAAAAAAwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAArgAAAK4AAAAAAAAABAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAQQAAAP8AAAD/AAAAQQAAAAAAAAADAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAACuAAAArgAAAAAAAAAEAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAAAAABBAAAA/wAAAP8AAABBAAAAAAAA
        AAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAK4AAACuAAAAAAAA
        AAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAAAAAEEAAAD/AAAA/wAA
        AEEAAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAArgAA
        AK4AAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAQQAA
        AP8AAAD/AAAAQQAAAAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAA
        AAAAAACuAAAArgAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAA
        AAAAAABBAAAA/wAAAP8AAABBAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAEAAAAAAAAAK4AAACuAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAADAAAAAAAAAEEAAAD/AAAA/wAAAEEAAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAQAAAAAAAAArgAAAK4AAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAMAAAAAAAAAQQAAAP8AAAD/AAAAQQAAAAAAAAADAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAACuAAAArgAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAAAAABBAAAA/wAAAP8AAABBAAAAAAAAAAMAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAK4AAACuAAAAAAAAAAQAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAAAAAEEAAAD/AAAA/wAAAEEAAAAAAAAAAwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAArgAAAK4AAAAAAAAABAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAQQAAAP8AAAD/AAAAQQAA
        AAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAACuAAAArgAA
        AAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAAAAABBAAAA/wAA
        AP8AAABBAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAA
        AK4AAACuAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAAAA
        AEEAAAD/AAAA/wAAAEIAAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAQAAAAAAAAArwAAAK8AAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAMAAAAAAAAAQgAAAP8AAAD/AAAAQAAAAAAAAAAGAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAACAAAACAAAAAAAAACtAAAArQAAAAAAAAAIAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAABAAAABgAAAAAAAABAAAAA/wAAAP8AAABaAAAAAAAAAAMAAAAAAAAAAwAAAAQAAAAEAAAAAwAA
        AAQAAAAEAAAAAgAAAAAAAAABAAAAAAAAAL8AAAC/AAAAAAAAAAEAAAAAAAAAAgAAAAQAAAAEAAAAAwAA
        AAQAAAAEAAAAAwAAAAAAAAADAAAAAAAAAFoAAAD/AAAAtwAAAP8AAADBAAAASwAAAAYAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAEAAAAAAAAAGAAAAHcAAADqAAAA6wAAAOsAAADqAAAAdgAAABgAAAAAAAAAAQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAABgAAAEsAAADCAAAA/wAAALcAAAAAAAAANwAAALUAAAD+AAAA8gAA
        ALcAAAB/AAAAXwAAAFcAAABoAAAAkwAAANAAAAD/AAAA7AAAAIMAAAASAAAAEgAAAIMAAADsAAAA/gAA
        ANAAAACTAAAAaAAAAFcAAABfAAAAfwAAALcAAADyAAAA/gAAALUAAAA3AAAAAAAAAAIAAAAAAAAAAAAA
        ABQAAABhAAAArAAAANgAAADrAAAA7gAAAOYAAADLAAAAkgAAAEAAAAAEAAAAAAAAAAEAAAAAAAAAAAAA
        AAQAAAA/AAAAkQAAAMsAAADmAAAA7gAAAOsAAADZAAAArAAAAGIAAAAUAAAAAAAAAAAAAAACAAAAAAAA
        AAMAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAEAAAAAQAA
        AAEAAAAEAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAwAA
        AAAAAAAAAAAAAAAAAAAAAAABAAAABAAAAAQAAAABAAAAAAAAAAAAAAAAAAAAAgAAAAQAAAADAAAAAQAA
        AAAAAAAAAAAAAAAAAAAAAAABAAAAAwAAAAQAAAACAAAAAAAAAAAAAAAAAAAAAQAAAAQAAAAEAAAAAQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAQAAAAEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAQAAAAEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAX///+hf0L+xAAYACIAQgFASABSAAAAAAIAJABCvqV9QgAkAELBJINC/y
        T/Qv8k/0L/JP9C/yT/Qv8k/0L/JP9C/yT/Qv8k/0L/JP9C/yT/Qv8k/0L/JP9C/yT/Qn8k/kIKJFBCAC
        QAQFkAmggAAAASACQAQSKBZIAQJBgPgX6B8=
</value>
  </data>
</root>